version: '3.4'

volumes:
  compose-volume:
  
networks:
  practice:

services:
  gallery-api:
    image: compose-debug
    build:
      context: ..
    # Enable to debug
    # command: ["sh", "-c", "pip install debugpy -t /tmp && python /tmp/debugpy --wait-for-client --listen 0.0.0.0:5678 -m uvicorn app.main:app --host 0.0.0.0 --port 8080"]
    ports:
      - 8080:8080
      - 5678:5678
    environment:
      TEST_NAME: Compose Debug Mode
      POSTGRES_URL: postgresql+psycopg2://usr:pwd@db:5432/db
      ADMIN_JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJtYXJjZWxvQGVtYWlsLmNvbSIsImV4cCI6MTcwMzQ1MTc2NH0.7H0tsroOtGhRmoixujPCqOb5w7fIB8YjTRkEnN88XCI
      # AZURE_STORAGE_CNN_STR: DefaultEndpointsProtocol=https;AccountName=01vianadev;AccountKey=Rv3sdophD7yqxfpuVdDdeyEANR0XJ9EpRRfjTn+pcjz4mPqbiYQRzeNdOJIPhyc8U5CWPXktvVNL+AStoT9SlA==;EndpointSuffix=core.windows.net
      CFI_ID: 396a1fd05689c45f07bdd191705e98dd
      CFI_TOKEN: aca-0JGeQfgqcseF1zDc5YSVf63Mp0Xs2cOtLv-J
    networks:
      - practice
    develop:
      watch:
        - action: sync
          path: ./app
          target: /app/app
          ignore:
            - __pycache__/
        - action: rebuild
          path: package.json


  ###         ####        ###
  # Containers adicionais para funcionamento do sistema.
  ###         ####        ###

  alembic:
    build:
      context: ../../alembic
    image: alembic
    environment: 
      POSTGRES_URL: postgresql+psycopg2://usr:pwd@db:5432/db
    networks:
      - practice

  db:
    image: postgres
    restart: always
    volumes:
      - compose-volume:/var/lib/postgresql/data/
    ports:
      - 5432
    # env_file:
    #   - .env
    environment:
      POSTGRES_PASSWORD: pwd
      POSTGRES_USER: usr
      POSTGRES_DB: db
    networks:
        - practice

  # adminer:
  #   image: adminer
  #   restart: always
  #   ports:
  #     - 8080:8080
  #   networks:
  #     - practice
